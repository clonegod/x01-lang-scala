【基本】
1. scala不要求类名与文件名一致
2. scala没有static,object是一个单例(class可以new不同的对象，而object则不可以，因为object就是一个单实例对象)


【函数式编程】
1. 函数有输入就有输出（尽量使用表达式，少用statement-没有返回值）
2. 函数可以作为参数进行传递
3. 尽量挖掘函数式编程的优势
	--大量使用函数，提高代码复用；
	--函数不依赖外界变量，函数间互不干扰；
	--易于并发程序的开发，因为变量的状态不变，不需要锁来保护状态的一致性，也就不会有竞争，死锁的问题。（加锁另一个弊端：影响性能）
	
【基本语法】
1. expression之间不必写分号，除非两个语句在同一行；
2. 函数定义从def开始，后面跟函数名，参数，以及返回值类型；
3. 一般，函数返回值类型不需要明确写出，scala在大多数情况下会推导出返回类型；
4. 参数名后面跟冒号":",并指定参数类型
5. 函数不需要return，最后一行表达式内容即为函数的返回值；
6. 不可变量定义用val进行定义
7. 可变量定义用var
8. 函数声明后跟"="，然后是函数体，如果函数只有一行，则不需要{}
9. 如果返回Unit，表示没有返回值(类似void)，通常不建议这么定义scala的函数
10. scala有for,while,if/else,通常不建议使用while，而使用功能更强的for
11. scala全部基于对象的，即使1+1这样简单的调用都是对象方法的调用


【条件判断】
Boolean类型取值true或false
Boolean类型操作符：&& || !

【def支持对变量的后期评估】
Scala中变量使用var定义，也可以使用def来定义：def a = 3 + 2
	def 定义的变量每次使用的时才对右边表达式进行评估
	val定义的变量，在定义时便进行评估
	def loop:Boolean = loop; def x = loop; 没有问题。但是val x = loop 则不行。
